/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: tile.proto */

#ifndef PROTOBUF_C_tile_2eproto__INCLUDED
#define PROTOBUF_C_tile_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _SquareProto SquareProto;
typedef struct _ChunkProto ChunkProto;
typedef struct _TileProto TileProto;


/* --- enums --- */


/* --- messages --- */

struct  _SquareProto
{
  ProtobufCMessage base;
  int32_t floor;
  int32_t item;
  int32_t quantity;
  int32_t x;
  int32_t y;
};
#define SQUARE_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&square_proto__descriptor) \
    , 0, 0, 0, 0, 0 }


struct  _ChunkProto
{
  ProtobufCMessage base;
  int32_t x;
  int32_t y;
  size_t n_squares;
  SquareProto **squares;
};
#define CHUNK_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&chunk_proto__descriptor) \
    , 0, 0, 0,NULL }


struct  _TileProto
{
  ProtobufCMessage base;
  int32_t x;
  int32_t y;
  size_t n_chunks;
  ChunkProto **chunks;
};
#define TILE_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&tile_proto__descriptor) \
    , 0, 0, 0,NULL }


/* SquareProto methods */
void   square_proto__init
                     (SquareProto         *message);
size_t square_proto__get_packed_size
                     (const SquareProto   *message);
size_t square_proto__pack
                     (const SquareProto   *message,
                      uint8_t             *out);
size_t square_proto__pack_to_buffer
                     (const SquareProto   *message,
                      ProtobufCBuffer     *buffer);
SquareProto *
       square_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   square_proto__free_unpacked
                     (SquareProto *message,
                      ProtobufCAllocator *allocator);
/* ChunkProto methods */
void   chunk_proto__init
                     (ChunkProto         *message);
size_t chunk_proto__get_packed_size
                     (const ChunkProto   *message);
size_t chunk_proto__pack
                     (const ChunkProto   *message,
                      uint8_t             *out);
size_t chunk_proto__pack_to_buffer
                     (const ChunkProto   *message,
                      ProtobufCBuffer     *buffer);
ChunkProto *
       chunk_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   chunk_proto__free_unpacked
                     (ChunkProto *message,
                      ProtobufCAllocator *allocator);
/* TileProto methods */
void   tile_proto__init
                     (TileProto         *message);
size_t tile_proto__get_packed_size
                     (const TileProto   *message);
size_t tile_proto__pack
                     (const TileProto   *message,
                      uint8_t             *out);
size_t tile_proto__pack_to_buffer
                     (const TileProto   *message,
                      ProtobufCBuffer     *buffer);
TileProto *
       tile_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   tile_proto__free_unpacked
                     (TileProto *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*SquareProto_Closure)
                 (const SquareProto *message,
                  void *closure_data);
typedef void (*ChunkProto_Closure)
                 (const ChunkProto *message,
                  void *closure_data);
typedef void (*TileProto_Closure)
                 (const TileProto *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor square_proto__descriptor;
extern const ProtobufCMessageDescriptor chunk_proto__descriptor;
extern const ProtobufCMessageDescriptor tile_proto__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_tile_2eproto__INCLUDED */
