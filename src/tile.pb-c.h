/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: tile.proto */

#ifndef PROTOBUF_C_tile_2eproto__INCLUDED
#define PROTOBUF_C_tile_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Square Square;
typedef struct _Chunk Chunk;
typedef struct _Tile Tile;


/* --- enums --- */


/* --- messages --- */

struct  _Square
{
  ProtobufCMessage base;
  int32_t floor;
  int32_t item;
  int32_t quantity;
  int32_t x;
  int32_t y;
};
#define SQUARE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&square__descriptor) \
    , 0, 0, 0, 0, 0 }


struct  _Chunk
{
  ProtobufCMessage base;
  int32_t x;
  int32_t y;
  size_t n_squares;
  Square **squares;
};
#define CHUNK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&chunk__descriptor) \
    , 0, 0, 0,NULL }


struct  _Tile
{
  ProtobufCMessage base;
  size_t n_chunks;
  Chunk **chunks;
};
#define TILE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&tile__descriptor) \
    , 0,NULL }


/* Square methods */
void   square__init
                     (Square         *message);
size_t square__get_packed_size
                     (const Square   *message);
size_t square__pack
                     (const Square   *message,
                      uint8_t             *out);
size_t square__pack_to_buffer
                     (const Square   *message,
                      ProtobufCBuffer     *buffer);
Square *
       square__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   square__free_unpacked
                     (Square *message,
                      ProtobufCAllocator *allocator);
/* Chunk methods */
void   chunk__init
                     (Chunk         *message);
size_t chunk__get_packed_size
                     (const Chunk   *message);
size_t chunk__pack
                     (const Chunk   *message,
                      uint8_t             *out);
size_t chunk__pack_to_buffer
                     (const Chunk   *message,
                      ProtobufCBuffer     *buffer);
Chunk *
       chunk__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   chunk__free_unpacked
                     (Chunk *message,
                      ProtobufCAllocator *allocator);
/* Tile methods */
void   tile__init
                     (Tile         *message);
size_t tile__get_packed_size
                     (const Tile   *message);
size_t tile__pack
                     (const Tile   *message,
                      uint8_t             *out);
size_t tile__pack_to_buffer
                     (const Tile   *message,
                      ProtobufCBuffer     *buffer);
Tile *
       tile__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   tile__free_unpacked
                     (Tile *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Square_Closure)
                 (const Square *message,
                  void *closure_data);
typedef void (*Chunk_Closure)
                 (const Chunk *message,
                  void *closure_data);
typedef void (*Tile_Closure)
                 (const Tile *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor square__descriptor;
extern const ProtobufCMessageDescriptor chunk__descriptor;
extern const ProtobufCMessageDescriptor tile__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_tile_2eproto__INCLUDED */
